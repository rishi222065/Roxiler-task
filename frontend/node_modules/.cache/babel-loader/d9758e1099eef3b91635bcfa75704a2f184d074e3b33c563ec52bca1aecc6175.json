{"ast":null,"code":"var _jsxFileName = \"F:\\\\task roxilew\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TransactionsTable from './Components/TransactionsTable';\nimport Statistics from './Components/Statistics';\nimport BarChart from './Components/BarChart';\nimport Dropdown from './Components/Dropdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return months[parseInt(monthNumber) - 1];\n};\nconst App = () => {\n  _s();\n  const [month, setMonth] = useState('3'); // Default to March\n  const [search, setSearch] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [statistics, setStatistics] = useState({});\n  const [barChartData, setBarChartData] = useState([]);\n  const [page, setPage] = useState(1);\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/Transactions', {\n        params: {\n          month,\n          search,\n          page,\n          per_page: 10\n        }\n      });\n      setTransactions(response.data);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n      setTransactions([]); // Default to empty array if there's an error\n    }\n  };\n  const fetchStatistics = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/Transactions/statistics', {\n        params: {\n          month\n        }\n      });\n      setStatistics(response.data);\n    } catch (error) {\n      console.error('Error fetching statistics:', error);\n      setStatistics({}); // Default to empty object if there's an error\n    }\n  };\n  const fetchBarChartData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/Transactions/bar-chart', {\n        params: {\n          month\n        }\n      });\n      setBarChartData(response.data);\n    } catch (error) {\n      console.error('Error fetching bar chart data:', error);\n      setBarChartData([]); // Default to empty array if there's an error\n    }\n  };\n  useEffect(() => {\n    fetchTransactions();\n    fetchStatistics();\n    fetchBarChartData();\n  }, [month, search, page]);\n  const handleMonthChange = selectedMonth => {\n    setMonth(selectedMonth);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h1_headding\",\n      children: \"Transactions Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search transactions...\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        className: \"searchbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        selectedMonth: month,\n        onChange: handleMonthChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table_nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page > 1 ? page - 1 : 1),\n        className: \"Prev\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page + 1),\n        className: \"next\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      data: statistics,\n      month: getMonthName(month)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      data: barChartData,\n      month: getMonthName(month)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HKCF0A7fQDeZ56ZY2sgf75eJ4ro=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TransactionsTable","Statistics","BarChart","Dropdown","jsxDEV","_jsxDEV","getMonthName","monthNumber","months","parseInt","App","_s","month","setMonth","search","setSearch","transactions","setTransactions","statistics","setStatistics","barChartData","setBarChartData","page","setPage","fetchTransactions","response","get","params","per_page","data","error","console","fetchStatistics","fetchBarChartData","handleMonthChange","selectedMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["F:/task roxilew/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TransactionsTable from './Components/TransactionsTable';\nimport Statistics from './Components/Statistics';\nimport BarChart from './Components/BarChart';\nimport Dropdown from './Components/Dropdown';\nimport './App.css';\n\nconst getMonthName = (monthNumber) => {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return months[parseInt(monthNumber) - 1];\n};\n\nconst App = () => {\n  const [month, setMonth] = useState('3'); // Default to March\n  const [search, setSearch] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [statistics, setStatistics] = useState({});\n  const [barChartData, setBarChartData] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/Transactions', {\n        params: {\n          month,\n          search,\n          page,\n          per_page: 10,\n        },\n      });\n      setTransactions(response.data);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n      setTransactions([]); // Default to empty array if there's an error\n    }\n  };\n\n  const fetchStatistics = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/Transactions/statistics', {\n        params: { month },\n      });\n      setStatistics(response.data);\n    } catch (error) {\n      console.error('Error fetching statistics:', error);\n      setStatistics({}); // Default to empty object if there's an error\n    }\n  };\n\n  const fetchBarChartData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/Transactions/bar-chart', {\n        params: { month },\n      });\n      setBarChartData(response.data);\n    } catch (error) {\n      console.error('Error fetching bar chart data:', error);\n      setBarChartData([]); // Default to empty array if there's an error\n    }\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n    fetchStatistics();\n    fetchBarChartData();\n  }, [month, search, page]);\n \n\n  const handleMonthChange = (selectedMonth) => {\n    setMonth(selectedMonth);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className='h1_headding'>Transactions Dashboard</h1>\n      \n      <div className=\"nav\">\n      <input\n        type=\"text\"\n        placeholder=\"Search transactions...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        className='searchbar'\n      />\n      <Dropdown selectedMonth={month} onChange={handleMonthChange}/>\n     \n      </div>\n      \n      \n      <TransactionsTable transactions={transactions} />\n      <div className='table_nav'>\n      <button onClick={() => setPage(page > 1 ? page - 1 : 1)} className='Prev'>Previous</button>\n      <button onClick={() => setPage(page + 1)} className='next'>Next</button>\n      </div>\n      <Statistics data={statistics} month={getMonthName(month)}/>\n      \n      <BarChart data={barChartData}  month={getMonthName(month)}/>\n    \n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}